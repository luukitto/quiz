{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/radio\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/icon\";\n\nfunction QuestionComponent_div_4_mat_icon_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 9);\n    i0.ɵɵtext(1, \"done\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QuestionComponent_div_4_mat_icon_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 9);\n    i0.ɵɵtext(1, \"clear\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QuestionComponent_div_4_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 10);\n    i0.ɵɵtext(2, \"sentiment_very_satisfied\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(4, \"pre\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"  You're right! The correct answer is Option \", ctx_r4.question.answer, \".\");\n  }\n}\n\nfunction QuestionComponent_div_4_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 10);\n    i0.ɵɵtext(2, \"sentiment_very_dissatisfied\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(4, \"pre\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"  That's wrong. The correct answer is Option \", ctx_r5.question.answer, \".\");\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-correct\": a0,\n    \"is-incorrect\": a1\n  };\n};\n\nfunction QuestionComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"mat-radio-button\", 5);\n    i0.ɵɵelementStart(2, \"li\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, QuestionComponent_div_4_mat_icon_4_Template, 2, 0, \"mat-icon\", 6);\n    i0.ɵɵtemplate(5, QuestionComponent_div_4_mat_icon_5_Template, 2, 0, \"mat-icon\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"section\", 7);\n    i0.ɵɵtemplate(7, QuestionComponent_div_4_div_7_Template, 6, 1, \"div\", 8);\n    i0.ɵɵtemplate(8, QuestionComponent_div_4_div_8_Template, 6, 1, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", option_r1.optionValue)(\"checked\", ctx_r0.question.selectedOption == option_r1)(\"ngClass\", i0.ɵɵpureFunction2(8, _c0, ctx_r0.isCorrect(option_r1.optionValue), ctx_r0.isIncorrect(option_r1.optionValue)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(option_r1.optionText);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isCorrect(option_r1.optionValue));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isIncorrect(option_r1.optionValue));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isCorrect(option_r1.optionValue) && !!ctx_r0.isIncorrect(option_r1.optionValue));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isIncorrect(option_r1.optionValue));\n  }\n}\n\nconst _c1 = [\"*\"];\nexport let QuestionComponent = /*#__PURE__*/(() => {\n  class QuestionComponent {\n    constructor() {\n      this.answer = new EventEmitter();\n      this.option = '';\n      this.grayBorder = '2px solid #979797';\n    }\n\n    ngOnInit() {\n      this.buildForm();\n    }\n\n    ngOnChanges(changes) {\n      if (changes.question && changes.question.currentValue && !changes.question.firstChange) {\n        this.formGroup.patchValue({\n          answer: ''\n        });\n      }\n    }\n\n    buildForm() {\n      this.formGroup = new FormGroup({\n        answer: new FormControl(['', Validators.required])\n      });\n    }\n\n    radioChange(answer) {\n      this.question.selectedOption = answer;\n      this.answer.emit(answer);\n      this.displayExplanation();\n    }\n\n    displayExplanation() {\n      const questionElem = document.getElementById('question');\n\n      if (questionElem !== null) {\n        questionElem.innerHTML = 'Option ' + this.question.answer + ' was correct because ' + this.question.explanation + '.';\n        questionElem.style.border = this.grayBorder;\n      }\n    } // mark the correct answer regardless of which option is selected once answered\n\n\n    isCorrect(option) {\n      return this.question.selectedOption && option === this.question.answer;\n    } // mark incorrect answer if selected\n\n\n    isIncorrect(option) {\n      return option !== this.question.answer && option === this.question.selectedOption;\n    }\n\n    onSubmit() {\n      this.formGroup.reset({\n        answer: null\n      });\n    }\n\n  }\n\n  QuestionComponent.ɵfac = function QuestionComponent_Factory(t) {\n    return new (t || QuestionComponent)();\n  };\n\n  QuestionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuestionComponent,\n    selectors: [[\"codelab-quiz-question\"]],\n    inputs: {\n      question: \"question\"\n    },\n    outputs: {\n      answer: \"answer\",\n      formGroup: \"formGroup\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c1,\n    decls: 5,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"aria-labelledby\", \"quiz-form-radio-group\", \"formControlName\", \"answer\", \"name\", \"answer\", \"required\", \"\", 3, \"change\"], [\"class\", \"radio-options\", 4, \"ngFor\", \"ngForOf\"], [1, \"radio-options\"], [\"name\", \"option-radio-button\", 1, \"option\", 3, \"value\", \"checked\", \"ngClass\"], [\"class\", \"feedback-icon\", 4, \"ngIf\"], [1, \"messages\"], [4, \"ngIf\"], [1, \"feedback-icon\"], [1, \"sentiment\"], [1, \"message\", \"correct-message\"], [1, \"message\", \"wrong-message\"]],\n    template: function QuestionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵelementStart(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function QuestionComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"ol\", 1);\n        i0.ɵɵelementStart(3, \"mat-radio-group\", 2);\n        i0.ɵɵlistener(\"change\", function QuestionComponent_Template_mat_radio_group_change_3_listener($event) {\n          return ctx.radioChange($event.value);\n        });\n        i0.ɵɵtemplate(4, QuestionComponent_div_4_Template, 9, 11, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.question.options);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.MatRadioGroup, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i3.NgForOf, i2.MatRadioButton, i3.NgClass, i3.NgIf, i4.MatIcon],\n    styles: [\"ol[_ngcontent-%COMP%]{margin-top:15px;margin-left:-40px;cursor:pointer}ol[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-left:30px}.radio-options[_ngcontent-%COMP%]{margin-bottom:5px;margin-left:.5rem;padding:4px}.option[_ngcontent-%COMP%]{border:2px solid #979797;font-family:Space Mono,monospace;font-size:20px;color:#0f0900;background-color:#f5f5f5;width:39rem!important;height:auto;padding:5px 5px 0 30px;margin-left:-5px;vertical-align:middle}.option[_ngcontent-%COMP%]:hover{outline:2px solid #007aff}.is-correct[_ngcontent-%COMP%]{background-color:#00c853!important}.is-incorrect[_ngcontent-%COMP%]{background-color:red!important}.feedback-icon[_ngcontent-%COMP%]{position:absolute;right:0;margin-right:40px;margin-top:-25px}section.messages[_ngcontent-%COMP%]{display:flex;justify-content:center}section.messages[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]{font-family:Space Mono,monospace;font-weight:900;font-size:16px;font-style:italic;text-align:center!important;margin:10px 0 0;padding:10px!important;width:32rem!important;display:inline-flex;align-items:center;vertical-align:middle;justify-content:center!important;margin:10px auto 0!important}section.messages[_ngcontent-%COMP%]   .correct-message[_ngcontent-%COMP%]{font-weight:900;font-style:italic;border:2px solid #007aff;border-radius:5px;color:#00c853!important}section.messages[_ngcontent-%COMP%]   .wrong-message[_ngcontent-%COMP%]{font-weight:900;font-style:italic;border:2px solid red;border-radius:5px;color:red!important;padding:5px}section.messages[_ngcontent-%COMP%]   mat-icon.sentiment[_ngcontent-%COMP%]{font-size:30px!important;color:#9acd32;margin-right:-50px!important;vertical-align:top;margin-top:18px}section.messages[_ngcontent-%COMP%]   pre[_ngcontent-%COMP%]{font-size:17px;margin-top:10px}  .mat-radio-button .mat-radio-container{display:none}\"]\n  });\n  return QuestionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}